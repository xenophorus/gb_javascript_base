'use strict';

/*
1. Объясните почему код даёт именно такие результаты? 
Подсказка. Чтобы лучше разобраться возьмите этот код и запустите в отладчике в браузере со 
включенными точками остановки.*/

//пример 1
function part1() {
    let a = 1, b = 1, c, d;
    c = ++a;
    alert(c); // ответ: 2
//Префиксный инкремент. Сначала плюс 1, потом присваивание.

//пример 2 
    d = b++;
    alert(d); //ответ: 1
//Постфиксный инкремент. Тут наоборот - Сначала присваивание, потом плюс 1.

//пример 3 
    c = 2 + ++a;
    alert(c); //ответ: 5
//2 + префиксный инкремент. По сути 2 + (2 + 1), ели можно так выразиться

//пример 4 
    d = 2 + b++;
    alert(d); //ответ: 4
// 2 + постфиксный инкремент, сначала 2 + b, потом присваивание, потом инкремент

    alert(a); //3
    alert(b); //3
//По два инкремент на каждую единицу.
}

//part1();

/*
2. Чему будут равны переменные x и a в примере ниже? Написать почему так произошло 
(описать последовательность действий). */


function part2() {
    let a1 = 2;
    let x = 1 + (a1 *= 2);
    console.log(x, a1);
}

// part2();

// a1 *= 2 - сокращенная запись a1 = a1 * 2. Поэтому a1 в итоге равен 4, выполнен в скобках с наивысшим приоритетом,
// а x = 1 + a1 = 5

/*
3. Объявить две переменные a и b и задать им целочисленные произвольные начальные 
значения. 
Затем написать скрипт, который работает по следующему принципу: 
- если a и b положительные, вывести их разность (ноль можно считать положительным числом); 
- если а и b отрицательные, вывести их произведение; 
- * (этот пункт по сложнее, делайте по желанию) если а и b разных знаков, вывести их сумму; 
Подсказка, чтобы сделать последний пункт можно также попробовать погуглить по запросу 
«получить знак числа javascript»


*/

/**
 * Функция возвращает случайное число на диапазоне (-100; 100)
 */
let randNum = () => {
    let x = Math.floor(Math.random() * 200);
    //let x = parseInt(Math.random() * 200);
    return (100 - x);
};

function fCount() {
    let a = randNum();
    let b = randNum();
    console.log('Число a = ' + a.toString() + ', b = ' + b.toString());
    if (a >= 0 && b >= 0) {
        return (a - b);
    } else if (a < 0 && b < 0) {
        return (a * b);
    } else {
        return (a + b);
    }
}

//Я не очень понял третий пункт. Если у нас не ++ (условие 1) и не -- (условие 2),
// то явно +- либо -+ (условие else). Знак числа получаем сравнением с нулем.
// Можно добавить проверку на -0, реализуется через if в функции randNum

function part3() {
    console.log(fCount());
}
/*
4. Реализовать основные 4 арифметические операции (+, -, /, *) в виде функций с двумя 
параметрами. Т.е. например, функция для сложения должна принимать два числа, складывать их 
и возвращать результат. 
Обязательно использовать оператор return. 
*/


let fAdd = function(a, b) {
    return (a + b);
};
let fSub = function(a, b) {
    return (a - b);
};
let fMul = function(a, b) {
    return (a * b);
};
let fDiv = function(a, b) {
    return (a / b);
};

function part4() {
    let a = randNum();
    let b = randNum();
    console.log('Число a = ' + a.toString() + ', b = ' + b.toString());
    console.log(fAdd(a, b));
    console.log(fSub(a, b));
    console.log(fMul(a, b));
    console.log(fDiv(a, b));
}

//part4();

/*
5. Реализовать функцию с тремя параметрами: function mathOperation(arg1, arg2, operation), 
где arg1, arg2 – значения аргументов, operation – строка с названием операции. В зависимости от 
переданного значения операции (использовать switch) выполнить одну из арифметических 
операций 
(использовать функции из задания 4) и вернуть полученное значение. 
*/


function mathOperation(a, b, f) {
    return f(a, b);
}

function part5() {
    let a = randNum();
    let b = randNum();
    console.log('Число a = ' + a.toString() + ', b = ' + b.toString());
    console.log(mathOperation(a, b, fAdd));
    console.log(mathOperation(a, b, fSub));
    console.log(mathOperation(a, b, fMul));
    console.log(mathOperation(a, b, fDiv));
}

//part5();

/*
6**. (Сложное задание, требует времени и возможно гугления, делайте по желанию.) 
Программа должна спросить у пользователя число, это будет количество денег, которое он хочет 
положить на счет в банке. Затем программа должна выдать примерно такое сообщение: 
"Ваша сумма в 101 рубль успешно зачислена." - в случае если пользователь ввел 101. 
"Ваша сумма в 10020 рублей успешно зачислена." - в случае если пользователь ввел 10020. 
"Ваша сумма в 120104 рубля успешно зачислена." - в случае если пользователь ввел 120104. 
То есть ваша задача выводить слово «рубль» в правильном падеже, в зависимости от введенного 
числа. 
*/


let fRubl = function(x) {
    return ('Ваша сумма в ' + x + ' рубль успешно зачислена')
};

let fRublya = function(x) {
    return ('Ваша сумма в ' + x + ' рубля успешно зачислена')
};

let fRubley = function(x) {
    return ('Ваша сумма в ' + x + ' рублей успешно зачислена')
};

// Назвал функции с привязкой к окончаниям

function part6() {
    let x = prompt('Введите сумму:');
    //let x = '2';
    let arrA = ['2', '3', '4'];
    if (x.length >= 2 && (x.slice(-2, -1) === '1')) {
        console.log(fRubley(x)); //откидываем 10 - 19
    } else if (arrA.includes(x.slice(-1))) {
        console.log(fRublya(x)); //откидываем *2, *3, *4
    } else if (x.slice(-1) === '1') {
        console.log(fRubl(x)); //откидываем *1
    } else {
        console.log(fRubley(x));
    }
}

//part6();
